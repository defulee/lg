#!/usr/local/bin/python3.7
# -*- coding: UTF-8 -*-
### 查询下载小说

import argparse
import os
import sys

from prettytable import PrettyTable

sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__)))))

from custom.book.lib.Biququ import search, get_chapters, get_chapter_content

# 1. 读取
keyword = ''


def parseArgs(argv):
    parser = argparse.ArgumentParser()
    parser.description = '参数解析'
    parser.add_argument('-k', '--keyword', required=True, help='搜索关键字')
    args = parser.parse_args()

    global keyword
    keyword = args.keyword


if __name__ == '__main__':
    parseArgs(sys.argv[1:])

    # 1. 搜索小说，返回搜索结果
    search_ret = search(keyword)
    bt = PrettyTable(["序号", "书名", "作者", "链接"])
    for idx, book_ret in enumerate(search_ret):
        bt.add_row([idx + 1, book_ret["书名"], book_ret["作者"], book_ret["小说链接"]])
    bt.align["书名"] = 'l'
    bt.align["链接"] = 'l'
    print(bt)

    choice = input("请输入要下载书所在序号[1-" + str(len(search_ret)) + "]: ")
    while not choice.isdigit() or int(choice) > len(search_ret) or int(choice) < 1:
        choice = input("输入不正确，期望输入[1-" + str(len(search_ret)) + "]范围内的数字，请重新输入: ")

    # 2. 默认选择第一个结果，返回结果的书籍信息
    book_info = search_ret[int(choice) - 1]

    # 3. 选择的书籍信息
    print("已选择书本:\n", "\t书名:", book_info["书名"], "\n\t作者:", book_info["作者"], "\n\t链接:", book_info["小说链接"])

    # 4. 根据小说链接解析目录
    chapters = get_chapters(book_info["小说链接"])
    bt = PrettyTable(["列1", "列2", "列3"])
    for idx in range(len(chapters) - 3):
        bt.add_row([chapters[idx]["章节名"], chapters[idx + 1]["章节名"], chapters[idx + 2]["章节名"]])
        idx += 3
    bt.align["列1"] = 'l'
    bt.align["列2"] = 'l'
    bt.align["列3"] = 'l'
    bt.header = False
    print(bt)

    # 5. 遍历小说目录链接，解析正文，返回正文段落列表
    fo = open(os.getcwd() + "/" + keyword + ".txt", "w")
    for idx, chapter in enumerate(chapters):
        print("下载章节:", chapter['章节名'], "[" + str(idx) + "/" + str(len(chapters)) + "]")
        context = get_chapter_content(chapter["章节链接"])
        fo.write(chapter['章节名'] + "\n")
        fo.write("".join(context) + "\n\n")
    print("执行完成，文件路径：" + os.getcwd() + "/" + keyword + ".txt")
